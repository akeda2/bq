#!/bin/bash

# TD=$HOME/tmp/bq
TD=/dev/shm/bq-$USER
mkdir -p $TD
[ -e $TD.limit ] || echo 1 > $TD.limit

[ "$1" = "-l" ] && { echo $2 > $TD.limit; exit 0; }
[ "$1" = "-r" ] && { exec ranger $TD; }

[ -z "$1" ] && { echo "-l N (currently `cat $TD.limit`), -r, command+args"; exit 1; }

__do_1() {
    ( echo "cd $PWD"; echo "$@" ) > $TD/$$.queued
    while :
    do
        (
            flock 37
            limit=`cat $TD.limit`
            running=`ls $TD/*.running 2>/dev/null | wc -l`
            running=${running// /}
            [ $running -lt $limit ] && mv $TD/$$.queued $TD/$$.running
        ) 37>$TD.lock

        [ -e $TD/$$.running ] && break

        # not our time to run yet
        sleep 2
    done

    "$@" < /dev/null > $TD/$$.f1 2> $TD/$$.f2 || echo $? > $TD/$$.exitcode

    # no lock needed to delete our own file (at worst the next job will wait # one more 'wait' cycle)
    mv $TD/$$.running $TD/$$.c

    # errored out?  bring those files up to the top!
    [ -f $TD/$$.exitcode ] && rename $$ .$$ $TD/$$.*
}

( ( __do_1 "$@" ) & )

exit 0
